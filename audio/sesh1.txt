# Blockchain Architecture Discussion

## Core Components

### Accounts and Storage
- Accounts have storage
- If account is a contract, it's all in one credit
- Gas variables (gasused, gaslimit) are not needed here
- Main variables:
  - Previous block
  - Transactions (input)
  - Receipts (output)
  - State

### Transaction Flow
- Transactions (renamed to "transaction inbox")
- Receipts (renamed to "event outbox")
- These are input/output from the super machine
- Proposer manages these

## Machine Architecture

### Machine Levels
- Second level of communication added
- Machines can create sub-machines
- Communication through txoutbox and eventinbox
- State is ignored (only used as final hash of results)

### Actor Pattern
- System is based on actor pattern
- Actors communicate with other actors through events
- Each actor:
  - Can spawn other actors
  - Has internal state
  - Communicates only through events
- Similar to browser window communication model

## Transaction Structure

### Input Transactions
- Similar to Ethereum
- Contains:
  - Source/destination
  - Increasing nonce
  - Method name
  - Data
  - Signature (can be multi-layered/aggregated)

### Output Transactions
- Similar structure to input
- Signed by all validation participants
- Example: If input has one signer but entity requires five, output will have five signatures
- Signatures collected during block voting

## Event System

### Event Flow
- Events come from higher sub-machines
- All participants have same event set
- Events aggregated into event pool
- Proposer creates reference event order
- Others verify:
  - Transaction signatures
  - Nonce increases
  - Event synchronization
  - Block number/hash validation

### Event Processing
- Events execute like transactions
- Can trigger:
  - Upward transactions
  - New channel transactions
  - Hub money transfers

## Machine Types

### Entity Types
- Signer entities
- Channels
- Depositories
- Leaf nodes (channels/depositories) cannot have sub-machines

### Communication Pattern
- Entities can interact through channels
- Depositories used for poor interactions
- Two types of sub-machines:
  - Organizational (entities)
  - Functional (channels/depositories)

[Additional sections truncated for brevity]

